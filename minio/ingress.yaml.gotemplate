apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: {{.component.ingress.class}}
{{if eq .component.ingress.protocol "https"}}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    kubernetes.io/tls-acme: "true"
{{end}}
{{if .component.ingress.fileSize }}
{{if eq .component.ingress.class "nginx"}}
    nginx.ingress.kubernetes.io/proxy-body-size: "{{.component.ingress.fileSize}}"
    nginx.org/client-max-body-size: "{{.component.ingress.fileSize}}"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "256m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
{{end}}
{{end}}
  name: "{{.hub.componentName}}"
spec:
  rules:
  - host: "{{.component.ingress.host}}"
    http:
      paths:
      - backend:
          service:
            name: {{.hub.componentName}}
            port:
              number: 9000
        path: /
        pathType: Prefix
{{if eq .component.ingress.protocol "https"}}
  tls:
    - hosts:
      - "{{.component.ingress.host}}"
      secretName: "{{.hub.componentName}}-tls"
{{end}}
