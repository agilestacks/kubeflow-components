#!/bin/sh -e

if test -z "$BACKUP_FILE"; then
    echo "Skipping database restore: due to BACKUP_FILE has not been defined"
    exit
fi

if test ! -f "$BACKUP_FILE"; then
    echo "Error backup file has not been found: $BACKUP_FILE"
    exit 1
fi

kubectl="kubectl --context=$DOMAIN_NAME --namespace=$NAMESPACE"

labels="app.kubernetes.io/component=primary"
labels="$labels,app.kubernetes.io/instance=$COMPONENT_NAME"
labels="$labels,app.kubernetes.io/name=mysql"

pod=$($kubectl get pod -l "$labels" -o "name")
if test -z "$pod"; then
    echo "Error: cannot find pod with labels: $labels"
    exit 1
fi

echo "* restoring database: $DB_NAME"
echo "* using backup file: $BACKUP_FILE"
printf '* waiting pod %s ready... ' "$pod"
$kubectl wait --for=condition=ready pod mysql-pipeline-0
echo '* proceeding with mysql restore'

# shellcheck disable=SC2086,SC2002
cat "$BACKUP_FILE" \
| $kubectl exec -i $pod -- bash -c \
"zcat | mysql -u root -p$ROOT_PASSWORD -D $DB_NAME"

echo "Done!"
