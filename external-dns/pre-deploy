#!/bin/sh -e

SA_SUFFIX=$(echo "$DOMAIN_NAME" |tr '[:upper:]' '[:lower:]'|cut -d "." -f1)
# Service account name must be between 6 and 30 characters (inclusive), 
# must begin with a lowercase letter, and consist of lowercase alphanumeric 
# characters that can be separated by hyphens.
SA_NAME="$(echo "$HUB_COMPONENT"-"$SA_SUFFIX" | cut -c1-29| tr '[:upper:]' '[:lower:]'| tr '_' '-')x"
SA_EMAIL="$SA_NAME@$PROJECT.iam.gserviceaccount.com"

kubectl config delete-context "$DOMAIN_NAME" > /dev/null 2>&1  || echo ""
gcloud container clusters get-credentials "$NAME" --zone "$ZONE"
kubectl config rename-context "$(kubectl config current-context)" "$DOMAIN_NAME"

if gcloud iam service-accounts describe "$SA_EMAIL" > /dev/null; then
  echo "Service account: $SA_EMAIL (already exists)"
else
  gcloud iam service-accounts create "$SA_NAME" --project="$PROJECT" --display-name="$SA_NAME"
fi

gcloud projects add-iam-policy-binding "$PROJECT" \
    --member "serviceAccount:$SA_EMAIL" \
    --role roles/dns.admin  

gcloud iam service-accounts add-iam-policy-binding "$SA_EMAIL" \
  --role roles/iam.workloadIdentityUser \
  --member "serviceAccount:$PROJECT.svc.id.goog[$NAMESPACE/$SA_NAME]"

cat << EOF > values-generated.yaml
serviceAccount:
  create: true
  name: "$SA_NAME"
  annotations:
    iam.gke.io/gcp-service-account: "$SA_EMAIL"
  nodeSelector:
    "iam.gke.io/gke-metadata-server-enabled": "true"
EOF
